{"version":3,"sources":["webpack:///src/app/pages/scan/scan.page.html","webpack:///src/app/pages/scan/scan-routing.module.ts","webpack:///src/app/pages/scan/scan.module.ts","webpack:///src/app/pages/scan/scan.page.scss","webpack:///src/app/pages/scan/scan.page.ts"],"names":["routes","path","component","ScanPageRoutingModule","imports","forChild","exports","ScanPageModule","declarations","ScanPage","navCtrl","barcodeScanner","dataLocal","scan","then","data","num","text","format","cancelled","catch","err","console","log","guardarRegistro","name","navigateForward","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,QAAMA,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,CAAvB;;AAWA,QAAaC,qBAAqB;AAAA;AAAA,KAAlC;;AAAaA,yBAAqB,6DAJjC,+DAAS;AACRC,aAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,aAAO,EAAE,CAAC,4DAAD;AAFD,KAAT,CAIiC,GAArBH,qBAAqB,CAArB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGb,QAAaI,cAAc;AAAA;AAAA,KAA3B;;AAAaA,kBAAc,6DAT1B,+DAAS;AACRH,aAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,0EAJO,CADD;AAORI,kBAAY,EAAE,CAAC,mDAAD;AAPN,KAAT,CAS0B,GAAdD,cAAc,CAAd;;;;;;;;;;;;;;;;ACnBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACUf,QAAaE,QAAQ;AAAA;AAAA;AAMnB,wBAAoBC,OAApB,EAAoDC,cAApD,EAA4FC,SAA5F,EAAyH;AAAA;;AAArG,aAAAF,OAAA,GAAAA,OAAA;AAAgC,aAAAC,cAAA,GAAAA,cAAA;AAAwC,aAAAC,SAAA,GAAAA,SAAA;AAAgC;;AANzG;AAAA;AAAA,mCAQR,CACV;AATkB;AAAA;AAAA,+BAWZ;AAAA;;AACL,eAAKD,cAAL,CAAoBE,IAApB,GAA2BC,IAA3B,CAAgC,UAAAC,IAAI,EAAI;AACpC;AACA,iBAAI,CAACC,GAAL,GAAWD,IAAI,CAACE,IAAhB;AACA,iBAAI,CAACC,MAAL,GAAcH,IAAI,CAACG,MAAnB;;AAEA,gBAAI,CAACH,IAAI,CAACI,SAAV,EAAqB,CACpB;AAEF,WARH,EAQKC,KARL,CAQW,UAAAC,GAAG,EAAI;AACbC,mBAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,GAArB;AACF,WAVH;AAWD;AAvBkB;AAAA;AAAA,8BAwBb;AACJ,eAAKT,SAAL,CAAeY,eAAf,CAA+B,KAAKN,MAApC,EAA4C,KAAKF,GAAjD,EAAsD,KAAKS,IAA3D;AACA,eAAKf,OAAL,CAAagB,eAAb,CAA6B,QAA7B;AAED;AA5BkB;;AAAA;AAAA,OAArB;;;;cAM+B;;cAAuC;;cAAmC;;;;AAN5FjB,YAAQ,6DALpB,gEAAU;AACTkB,cAAQ,EAAE,UADD;AAETC,cAAQ,EAAR;AAAA;AAAA,2FAFS;;;;AAAA,KAAV,CAKoB,E,+EAMU,4D,EAAuC,gF,EAAmC,6E,EANpF,GAARnB,QAAQ,CAAR","file":"pages-scan-scan-module-es5.js","sourcesContent":["export default \"<ion-header no-border>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <!-- <ion-button (click)=\\\"toggleMenu()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"menu\\\"></ion-icon>\\n      </ion-button>\\n    -->\\n    <ion-menu-button color=\\\"primary\\\"></ion-menu-button>\\n            \\n    </ion-buttons>\\n    <ion-title>scan</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list>\\n    <ion-item>\\n      <ion-label fixed>Format</ion-label>\\n      <ion-input type=\\\"text\\\" value=\\\"\\\" [(ngModel)]=\\\"format\\\"></ion-input>\\n    </ion-item> \\n    <ion-item>\\n      <ion-label fixed>Number</ion-label>\\n      <ion-input type=\\\"text\\\" value=\\\"\\\" [(ngModel)]=\\\"num\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n    <ion-label fixed>Name</ion-label>\\n    <ion-input type=\\\"text\\\" placeholder=\\\"Enter a name\\\" value=\\\"\\\" [(ngModel)]=\\\"name\\\"></ion-input>\\n    </ion-item>\\n    <ion-button color=\\\"primary\\\" (click)=\\\"add()\\\">add</ion-button>  \\n  </ion-list>\\n  \\n</ion-content>\\n<ion-footer no-shadow>\\n\\t<ion-toolbar position=\\\"bottom\\\">\\n\\t\\t<ion-button expand=\\\"block\\\" color=\\\"primary\\\" (click)=\\\"scan()\\\">scan</ion-button>\\n\\t</ion-toolbar>\\n</ion-footer>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ScanPage } from './scan.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ScanPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ScanPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ScanPageRoutingModule } from './scan-routing.module';\n\nimport { ScanPage } from './scan.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ScanPageRoutingModule\n  ],\n  declarations: [ScanPage]\n})\nexport class ScanPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NjYW4vc2Nhbi5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { BarcodeScanner } from '@ionic-native/barcode-scanner/ngx';\nimport { NavController } from '@ionic/angular';\nimport { DataLocalService } from '../../services/data-local.service';\n\n@Component({\n  selector: 'app-scan',\n  templateUrl: './scan.page.html',\n  styleUrls: ['./scan.page.scss'],\n})\nexport class ScanPage implements OnInit {\n\n  num: string;\n  format: string;\n  name: string;\n\n  constructor( public navCtrl: NavController, private barcodeScanner: BarcodeScanner, private dataLocal: DataLocalService) { }\n\n  ngOnInit() {\n  }\n\n  scan() {\n    this.barcodeScanner.scan().then(data => {\n        // this is called when a barcode is found\n        this.num = data.text;\n        this.format = data.format;\n\n        if (!data.cancelled) {\n        }\n\n      }).catch(err => {\n         console.log('Error', err);\n      });\n  }\n  add() {\n    this.dataLocal.guardarRegistro(this.format, this.num, this.name);\n    this.navCtrl.navigateForward('/start');\n\n  }\n\n}\n"]}