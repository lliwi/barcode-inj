{"version":3,"sources":["webpack:///src/app/pages/brute/brute.page.html","webpack:///src/app/pages/brute/brute-routing.module.ts","webpack:///src/app/pages/brute/brute.module.ts","webpack:///src/app/pages/brute/brute.page.scss","webpack:///src/app/pages/brute/brute.page.ts"],"names":["routes","path","component","BrutePageRoutingModule","imports","forChild","exports","BrutePageModule","declarations","BrutePage","dataLocal","codevalue","codeformat","rangeMM","step","Number","rangemin","codetype","isNaN","console","log","rangemax","String","selector","template"],"mappings":"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","file":"pages-brute-brute-module-es5.js","sourcesContent":["export default \"<ion-header >\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button text =\\\"Atras\\\" color=\\\"primary\\\" defaultHref=\\\"/\\\"></ion-back-button>\\n    </ion-buttons>\\n\\n    <ion-title > brute </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n \\n<div style='text-align: center;'>\\n  <!-- insert your custom barcode setting your data in the GET parameter \\\"data\\\" -->\\n  <img class=\\\"code\\\" alt='Barcode Generator TEC-IT'\\n       src='https://barcode.tec-it.com/barcode.ashx?data=\\\"{{rangeCurrentValue || codevalue}}\\\"&code={{codeformat}}&dpi=96&dataseparator='/>\\n       <p></p>\\n</div>\\n\\n</ion-content>\\n  <!-- Control for number barcodes-->\\n<ion-footer class=\\\"ion-padding\\\" class=\\\"ion-no-border\\\" *ngIf=\\\"codetype == 'number'\\\">\\n\\n  <ion-item>\\n    <ion-label>Min / Max range</ion-label>\\n    <ion-input type=\\\"number\\\" step=\\\"10\\\" value=\\\"10\\\" [(ngModel)]=\\\"rangeMM\\\" ></ion-input>\\n    <button item-right class=\\\"ion-padding\\\" (click)=\\\"btnRdown()\\\">-</button>\\n    <button item-right class=\\\"ion-padding\\\" (click)=\\\"btnRup()\\\">+</button>\\n  </ion-item>\\n  <ion-item>\\n    <ion-label>Step</ion-label>\\n    <ion-input type=\\\"number\\\" [(ngModel)]=\\\"step\\\"></ion-input>\\n    <button item-right class=\\\"ion-padding\\\" (click)=\\\"btnSdown()\\\">-</button>\\n    <button item-right class=\\\"ion-padding\\\" (click)=\\\"btnSup()\\\">+</button>\\n    \\n  </ion-item>\\n   <ion-item>\\n    <ion-range value={{codevalue}} min={{rangemin}} max={{rangemax}}  step={{step}}  color=\\\"primary\\\" [(ngModel)]=\\\"rangeCurrentValue\\\">\\n      <ion-label slot=\\\"start\\\">{{rangemin}}</ion-label>\\n      <ion-label slot=\\\"end\\\">{{rangemax}}</ion-label>\\n    </ion-range>\\n    <ion-badge>{{rangeCurrentValue}}</ion-badge>\\n  </ion-item>\\n\\n</ion-footer>\\n<!-- Control for string barcodes-->\\n<ion-footer class=\\\"ion-padding\\\" class=\\\"ion-no-border\\\" *ngIf=\\\"codetype == 'string'\\\">\\n  <ion-item>\\n    <ion-label>Code value</ion-label>\\n    <ion-input value=\\\"{{codevalue}}\\\" [(ngModel)]=\\\"rangeCurrentValue\\\"></ion-input>\\n  </ion-item>\\n</ion-footer>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { BrutePage } from './brute.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BrutePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class BrutePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { BrutePageRoutingModule } from './brute-routing.module';\nimport { BrutePage } from './brute.page';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    BrutePageRoutingModule\n  ],\n  declarations: [BrutePage]\n})\nexport class BrutePageModule {}\n","export default \".code {\\n  -webkit-transform: rotate(270deg);\\n          transform: rotate(270deg);\\n  height: 100%;\\n  width: 100%;\\n  display: block;\\n  padding-top: 50%;\\n  padding-bottom: 50%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3VzZXIvRG9jdW1lbnRzL2lvbmljL2JhcmNvZGUtaW5qL3NyYy9hcHAvcGFnZXMvYnJ1dGUvYnJ1dGUucGFnZS5zY3NzIiwic3JjL2FwcC9wYWdlcy9icnV0ZS9icnV0ZS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxpQ0FBQTtVQUFBLHlCQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7RUFDQSxjQUFBO0VBQ0EsZ0JBQUE7RUFDQSxtQkFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvYnJ1dGUvYnJ1dGUucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvZGUge1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDI3MGRlZyk7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHBhZGRpbmctdG9wOiA1MCU7XG4gICAgcGFkZGluZy1ib3R0b206IDUwJTtcblxuICB9IiwiLmNvZGUge1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgyNzBkZWcpO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBibG9jaztcbiAgcGFkZGluZy10b3A6IDUwJTtcbiAgcGFkZGluZy1ib3R0b206IDUwJTtcbn0iXX0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { DataLocalService } from 'src/app/services/data-local.service';\nimport { IonRange } from '@ionic/angular';\n\n\n\n\n\n@Component({\n  selector: 'app-brute',\n  templateUrl: './brute.page.html',\n  styleUrls: ['./brute.page.scss'],\n})\nexport class BrutePage implements OnInit {\n\n  @ViewChild('range') range: IonRange;\n\n   constructor( public dataLocal: DataLocalService) { }\n\n  codevalue = this.dataLocal.codevalue;\n  codeformat = this.dataLocal.codeformat;\n  rangeMM = 0;\n  step = 0;\n  rangemin: string;\n  rangemax: string;\n  // currentvalue: number;\n  rangeCurrentValue: any;\n  codetype: string;\n\n\n  ngOnInit() {\n\n    if ( Number(this.codevalue) - 1000 < 0 ) {\n      this.rangemin = '0';\n    }\n    this.codetype = 'number';\n\n    if (isNaN(Number(this.codevalue)) === true ) {\n    this.codetype = 'string';\n    console.log(this.codevalue);\n    }\n\n  }\n\n  btnRup() {\n    this.rangeMM = this.rangeMM + 10 ;\n\n    this.rangemax = String(Number(this.codevalue) + this.rangeMM);\n    this.rangemin = String(Number(this.codevalue) - this.rangeMM);\n\n  }\n\n  btnRdown() {\n    if (this.rangeMM > 0) {\n      this.rangeMM = this.rangeMM - 10 ;\n      this.rangemax = String(Number(this.codevalue) + this.rangeMM);\n      this.rangemin = String(Number(this.codevalue) - this.rangeMM);\n    }\n\n  }\n\n  btnSup() {\n    this.step = this.step + 1 ;\n  }\n\n  btnSdown() {\n    if (this.step > 0) {\n      this.step = this.step - 1 ;\n    }\n  }\n\n\n\n}\n"]}