import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { IonicNativePlugin, cordova } from '@ionic-native/core';
import * as ɵngcc0 from '@angular/core';
var SplashScreen = /** @class */ (function (_super) {
    tslib_1.__extends(SplashScreen, _super);
    function SplashScreen() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SplashScreen.prototype.show = function () { return cordova(this, "show", { "sync": true }, arguments); };
    SplashScreen.prototype.hide = function () { return cordova(this, "hide", { "sync": true }, arguments); };
    SplashScreen.pluginName = "SplashScreen";
    SplashScreen.plugin = "cordova-plugin-splashscreen";
    SplashScreen.pluginRef = "navigator.splashscreen";
    SplashScreen.repo = "https://github.com/apache/cordova-plugin-splashscreen";
    SplashScreen.platforms = ["Amazon Fire OS", "Android", "iOS", "Windows"];
SplashScreen.ɵfac = function SplashScreen_Factory(t) { return ɵSplashScreen_BaseFactory(t || SplashScreen); };
SplashScreen.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: SplashScreen, factory: function (t) { return SplashScreen.ɵfac(t); } });
var ɵSplashScreen_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(SplashScreen);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SplashScreen, [{
        type: Injectable
    }], null, null); })();
    return SplashScreen;
}(IonicNativePlugin));
export { SplashScreen };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3VzZXIvRG9jdW1lbnRzL2lvbmljL2JhcmNvZGUtaW5qL25vZGVfbW9kdWxlcy9AaW9uaWMtbmF0aXZlL3NwbGFzaC1zY3JlZW4vbmd4L2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FBR0E7Ozs7Ozs7Ozs7OzZFQVc2RTs7Ozs7OzBCQUd4RCIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIHRzbGliXzEgZnJvbSBcInRzbGliXCI7XG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJb25pY05hdGl2ZVBsdWdpbiwgY29yZG92YSB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG52YXIgU3BsYXNoU2NyZWVuID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIHRzbGliXzEuX19leHRlbmRzKFNwbGFzaFNjcmVlbiwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBTcGxhc2hTY3JlZW4oKSB7XG4gICAgICAgIHJldHVybiBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICB9XG4gICAgU3BsYXNoU2NyZWVuLnByb3RvdHlwZS5zaG93ID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gY29yZG92YSh0aGlzLCBcInNob3dcIiwgeyBcInN5bmNcIjogdHJ1ZSB9LCBhcmd1bWVudHMpOyB9O1xuICAgIFNwbGFzaFNjcmVlbi5wcm90b3R5cGUuaGlkZSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGNvcmRvdmEodGhpcywgXCJoaWRlXCIsIHsgXCJzeW5jXCI6IHRydWUgfSwgYXJndW1lbnRzKTsgfTtcbiAgICBTcGxhc2hTY3JlZW4ucGx1Z2luTmFtZSA9IFwiU3BsYXNoU2NyZWVuXCI7XG4gICAgU3BsYXNoU2NyZWVuLnBsdWdpbiA9IFwiY29yZG92YS1wbHVnaW4tc3BsYXNoc2NyZWVuXCI7XG4gICAgU3BsYXNoU2NyZWVuLnBsdWdpblJlZiA9IFwibmF2aWdhdG9yLnNwbGFzaHNjcmVlblwiO1xuICAgIFNwbGFzaFNjcmVlbi5yZXBvID0gXCJodHRwczovL2dpdGh1Yi5jb20vYXBhY2hlL2NvcmRvdmEtcGx1Z2luLXNwbGFzaHNjcmVlblwiO1xuICAgIFNwbGFzaFNjcmVlbi5wbGF0Zm9ybXMgPSBbXCJBbWF6b24gRmlyZSBPU1wiLCBcIkFuZHJvaWRcIiwgXCJpT1NcIiwgXCJXaW5kb3dzXCJdO1xuICAgIFNwbGFzaFNjcmVlbiA9IHRzbGliXzEuX19kZWNvcmF0ZShbXG4gICAgICAgIEluamVjdGFibGUoKVxuICAgIF0sIFNwbGFzaFNjcmVlbik7XG4gICAgcmV0dXJuIFNwbGFzaFNjcmVlbjtcbn0oSW9uaWNOYXRpdmVQbHVnaW4pKTtcbmV4cG9ydCB7IFNwbGFzaFNjcmVlbiB9O1xuIl19