import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { IonicNativePlugin, cordova, cordovaPropertyGet, cordovaPropertySet } from '@ionic-native/core';
import * as ɵngcc0 from '@angular/core';
var StatusBar = /** @class */ (function (_super) {
    tslib_1.__extends(StatusBar, _super);
    function StatusBar() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    StatusBar.prototype.overlaysWebView = function (doesOverlay) { return cordova(this, "overlaysWebView", { "sync": true }, arguments); };
    StatusBar.prototype.styleDefault = function () { return cordova(this, "styleDefault", { "sync": true }, arguments); };
    StatusBar.prototype.styleLightContent = function () { return cordova(this, "styleLightContent", { "sync": true }, arguments); };
    StatusBar.prototype.styleBlackTranslucent = function () { return cordova(this, "styleBlackTranslucent", { "sync": true }, arguments); };
    StatusBar.prototype.styleBlackOpaque = function () { return cordova(this, "styleBlackOpaque", { "sync": true }, arguments); };
    StatusBar.prototype.backgroundColorByName = function (colorName) { return cordova(this, "backgroundColorByName", { "sync": true }, arguments); };
    StatusBar.prototype.backgroundColorByHexString = function (hexString) { return cordova(this, "backgroundColorByHexString", { "sync": true }, arguments); };
    StatusBar.prototype.hide = function () { return cordova(this, "hide", { "sync": true }, arguments); };
    StatusBar.prototype.show = function () { return cordova(this, "show", { "sync": true }, arguments); };
    Object.defineProperty(StatusBar.prototype, "isVisible", {
        get: function () { return cordovaPropertyGet(this, "isVisible"); },
        set: function (value) { cordovaPropertySet(this, "isVisible", value); },
        enumerable: true,
        configurable: true
    });
    StatusBar.pluginName = "StatusBar";
    StatusBar.plugin = "cordova-plugin-statusbar";
    StatusBar.pluginRef = "StatusBar";
    StatusBar.repo = "https://github.com/apache/cordova-plugin-statusbar";
    StatusBar.platforms = ["Android", "iOS", "Windows"];
StatusBar.ɵfac = function StatusBar_Factory(t) { return ɵStatusBar_BaseFactory(t || StatusBar); };
StatusBar.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: StatusBar, factory: function (t) { return StatusBar.ɵfac(t); } });
var ɵStatusBar_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(StatusBar);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(StatusBar, [{
        type: Injectable
    }], null, null); })();
    return StatusBar;
}(IonicNativePlugin));
export { StatusBar };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3VzZXIvRG9jdW1lbnRzL2lvbmljL2JhcmNvZGUtaW5qL25vZGVfbW9kdWxlcy9AaW9uaWMtbmF0aXZlL3N0YXR1cy1iYXIvbmd4L2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FBR0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt3REF3QndEOzs7Ozs7MEJBR3RDIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgdHNsaWJfMSBmcm9tIFwidHNsaWJcIjtcbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IElvbmljTmF0aXZlUGx1Z2luLCBjb3Jkb3ZhLCBjb3Jkb3ZhUHJvcGVydHlHZXQsIGNvcmRvdmFQcm9wZXJ0eVNldCB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG52YXIgU3RhdHVzQmFyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIHRzbGliXzEuX19leHRlbmRzKFN0YXR1c0JhciwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBTdGF0dXNCYXIoKSB7XG4gICAgICAgIHJldHVybiBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICB9XG4gICAgU3RhdHVzQmFyLnByb3RvdHlwZS5vdmVybGF5c1dlYlZpZXcgPSBmdW5jdGlvbiAoZG9lc092ZXJsYXkpIHsgcmV0dXJuIGNvcmRvdmEodGhpcywgXCJvdmVybGF5c1dlYlZpZXdcIiwgeyBcInN5bmNcIjogdHJ1ZSB9LCBhcmd1bWVudHMpOyB9O1xuICAgIFN0YXR1c0Jhci5wcm90b3R5cGUuc3R5bGVEZWZhdWx0ID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gY29yZG92YSh0aGlzLCBcInN0eWxlRGVmYXVsdFwiLCB7IFwic3luY1wiOiB0cnVlIH0sIGFyZ3VtZW50cyk7IH07XG4gICAgU3RhdHVzQmFyLnByb3RvdHlwZS5zdHlsZUxpZ2h0Q29udGVudCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGNvcmRvdmEodGhpcywgXCJzdHlsZUxpZ2h0Q29udGVudFwiLCB7IFwic3luY1wiOiB0cnVlIH0sIGFyZ3VtZW50cyk7IH07XG4gICAgU3RhdHVzQmFyLnByb3RvdHlwZS5zdHlsZUJsYWNrVHJhbnNsdWNlbnQgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBjb3Jkb3ZhKHRoaXMsIFwic3R5bGVCbGFja1RyYW5zbHVjZW50XCIsIHsgXCJzeW5jXCI6IHRydWUgfSwgYXJndW1lbnRzKTsgfTtcbiAgICBTdGF0dXNCYXIucHJvdG90eXBlLnN0eWxlQmxhY2tPcGFxdWUgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBjb3Jkb3ZhKHRoaXMsIFwic3R5bGVCbGFja09wYXF1ZVwiLCB7IFwic3luY1wiOiB0cnVlIH0sIGFyZ3VtZW50cyk7IH07XG4gICAgU3RhdHVzQmFyLnByb3RvdHlwZS5iYWNrZ3JvdW5kQ29sb3JCeU5hbWUgPSBmdW5jdGlvbiAoY29sb3JOYW1lKSB7IHJldHVybiBjb3Jkb3ZhKHRoaXMsIFwiYmFja2dyb3VuZENvbG9yQnlOYW1lXCIsIHsgXCJzeW5jXCI6IHRydWUgfSwgYXJndW1lbnRzKTsgfTtcbiAgICBTdGF0dXNCYXIucHJvdG90eXBlLmJhY2tncm91bmRDb2xvckJ5SGV4U3RyaW5nID0gZnVuY3Rpb24gKGhleFN0cmluZykgeyByZXR1cm4gY29yZG92YSh0aGlzLCBcImJhY2tncm91bmRDb2xvckJ5SGV4U3RyaW5nXCIsIHsgXCJzeW5jXCI6IHRydWUgfSwgYXJndW1lbnRzKTsgfTtcbiAgICBTdGF0dXNCYXIucHJvdG90eXBlLmhpZGUgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBjb3Jkb3ZhKHRoaXMsIFwiaGlkZVwiLCB7IFwic3luY1wiOiB0cnVlIH0sIGFyZ3VtZW50cyk7IH07XG4gICAgU3RhdHVzQmFyLnByb3RvdHlwZS5zaG93ID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gY29yZG92YSh0aGlzLCBcInNob3dcIiwgeyBcInN5bmNcIjogdHJ1ZSB9LCBhcmd1bWVudHMpOyB9O1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShTdGF0dXNCYXIucHJvdG90eXBlLCBcImlzVmlzaWJsZVwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gY29yZG92YVByb3BlcnR5R2V0KHRoaXMsIFwiaXNWaXNpYmxlXCIpOyB9LFxuICAgICAgICBzZXQ6IGZ1bmN0aW9uICh2YWx1ZSkgeyBjb3Jkb3ZhUHJvcGVydHlTZXQodGhpcywgXCJpc1Zpc2libGVcIiwgdmFsdWUpOyB9LFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBTdGF0dXNCYXIucGx1Z2luTmFtZSA9IFwiU3RhdHVzQmFyXCI7XG4gICAgU3RhdHVzQmFyLnBsdWdpbiA9IFwiY29yZG92YS1wbHVnaW4tc3RhdHVzYmFyXCI7XG4gICAgU3RhdHVzQmFyLnBsdWdpblJlZiA9IFwiU3RhdHVzQmFyXCI7XG4gICAgU3RhdHVzQmFyLnJlcG8gPSBcImh0dHBzOi8vZ2l0aHViLmNvbS9hcGFjaGUvY29yZG92YS1wbHVnaW4tc3RhdHVzYmFyXCI7XG4gICAgU3RhdHVzQmFyLnBsYXRmb3JtcyA9IFtcIkFuZHJvaWRcIiwgXCJpT1NcIiwgXCJXaW5kb3dzXCJdO1xuICAgIFN0YXR1c0JhciA9IHRzbGliXzEuX19kZWNvcmF0ZShbXG4gICAgICAgIEluamVjdGFibGUoKVxuICAgIF0sIFN0YXR1c0Jhcik7XG4gICAgcmV0dXJuIFN0YXR1c0Jhcjtcbn0oSW9uaWNOYXRpdmVQbHVnaW4pKTtcbmV4cG9ydCB7IFN0YXR1c0JhciB9O1xuIl19